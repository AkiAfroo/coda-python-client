version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.7
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "setup.py" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Install Dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -e .[test]

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "setup.py" }}

      - run: 
          name: Run Tests
          command: |
            . venv/bin/activate
            python3 -m pytest

  deploy:
    docker:
      - image: circleci/python:3.7
    working_directory: ~/repo
    steps:
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "setup.py" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      
      - run:
          name: Activate Virtual Environment
          command: |
            python3 -m venv venv
            . venv/bin/activate
      
      - run: 
          name: Package Library
          command: python3 setup.py sdist bdist_wheel

      - run: 
          name: Install JFrog CLI
          command: bash -c 'curl -fL https://getcli.jfrog.io | sh'

      - run: 
          name: Configure JFrog CLI
          command: ./jfrog rt config --url $ARTIFACTORY_URL --user $ARTIFACTORY_USER --apikey $ARTIFACTORY_API_KEY --interactive=false
      
      - run: 
          name: Release Build to Artifactory
          command: ./jfrog rt u "dist/(CodaClient*)" /pypi-local/codaclient/{1} --recursive=false 

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master